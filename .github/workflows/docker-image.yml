name: Release CI

on:
  push:
    branches: [ "release" ]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set truss version
        id: version
        run: |
          # Check if branch is release
          if [[ ${{github.ref_name}} == "release" ]]; then
            # Get version from pyproject
            version=$(cat pyproject.toml | grep 'version = ' | awk '{print $3}' | sed 's/"//g')
          else
            # Get version from branch
            version=${{ github.sha }}
          fi
          echo ::set-output name=version::$version

  build-image:
    runs-on: ubuntu-latest
    environment: docker
    needs: version
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: |
          baseten/truss:${{ needs.version.outputs.version }}
          baseten/truss:latest
        cache-from: |
          type=gha, scope=${{ github.workflow }}-${{ github.ref_name }}
        cache-to: type=gha, mode=max, scope=${{ github.workflow }}-${{ github.ref_name }}

  push-to-pypi:
    runs-on: ubuntu-latest
    environment: pypi
    needs: version
    if: ${{ github.ref_name }} == "release"
    steps:
    - uses: actions/checkout@v3
    - name: echo version
      run: |
        echo ${{ needs.version.outputs.version }}
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python -
        export PATH="$PATH:$HOME/.poetry/bin"
    - name: Install poetry packages
      run: |
        poetry install --no-dev
    - name: Build and push
      run: |
        poetry build
        poetry publish -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }}
